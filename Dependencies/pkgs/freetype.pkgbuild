pkgname=freetype
pkgver=2.12.1
pkgrel=2
sources=("https://github.com/m3t4f1v3/onscripter-deps-updated/raw/master/archives/${pkgname}-${pkgver}.tar.xz") #http://mirror.downloadvn.com/nongnu/freetype/
hashes=('4766f20157cc4cf0cd292f80bf917f92d1c439b243ac3018debf6b9140c41a7f')

if [ -e "$outdir/.pkgs/harfbuzz" ]; then
    configopts=(
        '--disable-shared'
        '--without-brotli'
        "--libdir=$outdir/lib"
        '--enable-freetype-config'
        "HARFBUZZ_CFLAGS=-I$outdir/include/harfbuzz"
        "HARFBUZZ_LIBS=-L$outdir/lib"
        "LIBPNG_CFLAGS=-I$outdir/include/libpng16"
        "LIBPNG_LIBS=-L$outdir/lib"
        
    )
elif [ $(( $PKGBUILD_RECURSION_DEPTH )) -ge 1 ]; then
    configopts=(
        '--disable-shared'
        '--without-brotli'
        "--libdir=$outdir/lib"
        '--without-harfbuzz'
        '--enable-freetype-config'
        "LIBPNG_CFLAGS=-I$outdir/include/libpng16"
        "LIBPNG_LIBS=-L$outdir/lib"
    )
else
    error_out "Please, install harfbuzz before building freetype manually"
fi
CFLAGS="$CFLAGS ${cflags[@]} -fPIC"
cflags_win32="-U__STRICT_ANSI__"
if [ -e "$outdir/.pkgs/harfbuzz" ]; then
    ldflags="-L$outdir/lib -lpng -lharfbuzz -lm -lfreetype"
else
    ldflags="-L$outdir/lib -lpng -lm"
fi

prebuild() {
    pushd "$pkgname-${pkgver}" &>/dev/null
    
    autogenerate
}

build() {
    msg "Performing pre-build actions"
    prebuild
    
    msg "Configuring %s" "$pkgname"
    configure
 
    # freetype's build system seems to break if CC is defined in the environment
    # for the compilation stage
    unset CC
   
    msg "Compiling %s" "$pkgname"
    compile
    
    msg "Installing %s" "$pkgname"
    copy
    
    if [ -e "$outdir/.pkgs/harfbuzz" ]; then    
        local ret=0
        
        msg "Patching %s-config" "$pkgname"
        logfile="$logdir/$pkgname.freetype-config-patch.log"
        ret=0
        case $(getHost) in
        darwin-macOS)
            sed -i "" "s,-L$outdir/lib -L$outdir/lib,-L$outdir/lib -lharfbuzz,g" "$outdir/bin/freetype-config" &>"$logfile" || ret=$?
            if (( $ret == 0 )); then
                sed -i "" "s,pkg-config --atleast-pkgconfig-version,false,g" "$outdir/bin/freetype-config" &>"$logfile" || ret=$?
            fi
        ;;
        *)
            sed -i "s,-L$outdir/lib -L$outdir/lib,-L$outdir/lib -lharfbuzz,g" "$outdir/bin/freetype-config" &>"$logfile" || ret=$?
            if (( $ret == 0 )); then
                sed -i "s,pkg-config --atleast-pkgconfig-version,false,g" "$outdir/bin/freetype-config" &>"$logfile" || ret=$?
            fi
        ;;
        esac
        if (( $ret )); then
            tail -n 20 "$logfile"
            error "Patching freetype-config failed."
            exit
        fi
        
        msg "Patching libharfbuzz.la" "$pkgname"
        logfile="$logdir/$pkgname.libharfbuzz-patch.log"
        ret=0
        case $(getHost) in
        darwin-macOS)
            sed -i "" "s,$outdir/lib/libfreetype.la,$outdir/lib/libfreetype.la $outdir/lib/libharfbuzz.la,g" "$outdir/lib/libharfbuzz.la" &>"$logfile" || ret=$?
        ;;
        *)
            sed -i "s,$outdir/lib/libfreetype.la,$outdir/lib/libfreetype.la $outdir/lib/libharfbuzz.la,g" "$outdir/lib/libharfbuzz.la" &>"$logfile" || ret=$?
        ;;
        esac
        if (( $ret )); then
            tail -n 20 "$logfile"
            error "Patching libharfbuzz.la failed."
            exit
        fi
    fi
    
    postbuild

    msg "Finishing %s" "$pkgname"
}

# vim: set syntax=sh:
