pkgname=libcxx
pkgver=14.0.0
pkgrel=1
depends=('libcxxabi')
sources=(
    "https://github.com/llvm/llvm-project/releases/download/llvmorg-${pkgver}/libcxx-${pkgver}.src.tar.xz" #https://github.com/llvm/llvm-project/releases/latest
    'libcxx-snow-leo.patch'
)
hashes=(
    'c2902675e7c84324fb2c1e45489220f250ede016cc3117186785d9dc291f9de2'
    '8d32757ce846c1a31c2143a3a187eb1ce24e858a1fde959f6716740a1e51f856'
)

prebuild() {
    pushd "$pkgname-${pkgver}.src" &>/dev/null
    apply_patch "${sources[1]}"
    popd &>/dev/null

    mkdir -p "$pkgname-${pkgver}"
    pushd "$pkgname-${pkgver}" &>/dev/null
}

configure() {
    msg "Running cmake"

    local ret=0
    local logfile="$logdir/$pkgname.cmake.log"

    if [ -x /opt/clang/bin/clang ]; then
        export CC="/opt/clang/bin/clang"
        export CXX="/opt/clang/bin/clang++"
        llvmconfig="/opt/clang/bin/llvm-config"
    else
        export CC="$(ls /opt/local/bin/clang-mp*)"
        export CXX="$(ls /opt/local/bin/clang++-mp*)"
        llvmconfig="$(ls /opt/local/bin/llvm-config-mp*)"
    fi

    lcf="$CFLAGS ${cflags[@]} $CFLAGS_EXTRA"
    lcxf="$CPPFLAGS ${cppflags[@]} $CPPFLAGS_EXTRA"

    deploy=""
    for flag in "${lcf[@]}"; do
        if [[ $flag =~ .*mmacosx-version-min=([0-9]*\.[0-9]*).* ]]; then
            deploy="-DCMAKE_OSX_DEPLOYMENT_TARGET=${BASH_REMATCH[1]}"
        fi
    done

    cmake ../"$pkgname-${pkgver}.src" -G "Unix Makefiles" -DCMAKE_C_FLAGS="$lcf -flto=thin -DNDEBUG" -DCMAKE_CXX_FLAGS="$lcxf -flto=thin -DNDEBUG" -DLLVM_CONFIG_PATH="$llvmconfig" \
     -DLLVM_ENABLE_LIBCXX=1 -DLIBCXX_ENABLE_ASSERTIONS=OFF -DLIBCXX_ENABLE_SHARED=OFF -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=OFF -DLIBCXX_INCLUDE_TESTS=OFF -DLIBCXX_INCLUDE_BENCHMARKS=OFF \
     -DLIBCXX_INCLUDE_DOCS=OFF $deploy &>"$logfile" || ret=$?

    if (( $ret )); then
        tail -n 20 "$logfile"
        error "Cmake %s failed" "$pkgname"
        error "The full log is: %s" "$logfile"
        exit 1
    fi
}

copy() {
    cp "lib/libc++.a" "$outdir/lib"
    msg "Cleaning destination directory"
    rm -f "$outdir/include/cxxabi.h"
    rm -f "$outdir/include/__cxxabi_config.h"
}

# vim: set syntax=sh:
